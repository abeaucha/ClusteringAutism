---
title: "Similarity analysis of mouse and human autism neuroanatomical clusters"
format: 
  html:
    embed-resources: true
    self-contained: true
    toc: true
editor: visual
---

```{r setup, echo = FALSE}
knitr::opts_chunk$set(echo = FALSE,
                      eval = TRUE)
```

```{r packages}
suppressPackageStartupMessages(library(tidyverse))
suppressPackageStartupMessages(library(data.tree))
suppressPackageStartupMessages(library(RMINC))
suppressPackageStartupMessages(library(MRIcrotome))
suppressPackageStartupMessages(library(pheatmap))
suppressPackageStartupMessages(library(viridis))
suppressPackageStartupMessages(library(RColorBrewer))
suppressPackageStartupMessages(library(ggplotify))
suppressPackageStartupMessages(library(patchwork))
suppressPackageStartupMessages(library(grid))
suppressPackageStartupMessages(library(gridExtra))

```

```{r functions}
source("../../functions/buildSimilarityMatrix.R")
source("../../functions/tree_tools.R")
source("analysis_tools_v2.R")
```

# Analysis parameters

```{r parameters-general}
#Gene space
gene_space <- "average_latent_space"
# gene_space <- "input_space"
# gene_space<- "latent_space"

#Latent space ID
#Only used if gene_space == "latent_space"
latent_space_id <- 1

#Jacobians
# jacobians <- "absolute"
jacobians <- "relative"

#Thresholding method
# threshold_method <- "intensity"
threshold_method <- "topn"

#Threshold value
threshold <- 0.2
# threshold <- 0.1
# threshold <- 0.05


#Mask type
# mask_type <- "positive"
# mask_type <- "negative"

#Metric
metric <- "correlation"
```

The parameters chosen for this analysis are:

```{r parameters-table}
df_parameters <- tibble(Parameter = c("Gene space",
                                      "Jacobians",
                                      "Thresholding method",
                                      "Threshold",
                                      "Similarity metric"),
                        Value = c(gene_space,
                                  jacobians,
                                  threshold_method,
                                  threshold,
                                  metric))

knitr::kable(df_parameters)
```

# Full similarity matrices

## Similarity matrices from signed masks

```{r}
mat_sim_pos <- import_similarity_matrix(gene_space = gene_space,
                                        jacobians = jacobians,
                                        threshold_method = threshold_method,
                                        threshold = threshold,
                                        mask = "positive",
                                        latent_space_id = latent_space_id)

mat_sim_neg <- import_similarity_matrix(gene_space = gene_space,
                                        jacobians = jacobians,
                                        threshold_method = threshold_method,
                                        threshold = threshold,
                                        mask = "negative",
                                        latent_space_id = latent_space_id)
```

```{r fig.width = 20, fig.height = 10}
heatmap_pos <- plot_heatmap(x = mat_sim_pos, 
                            clustering = FALSE) +
  labs(title = "Cluster similarity using positive mask")

heatmap_neg <- plot_heatmap(x = mat_sim_neg, 
                            clustering = FALSE) +
  labs(title = "Cluster similarity using negative mask")

heatmap_pos | heatmap_neg
```

## Average similarity matrix

```{r}
mat_sim <- array(data = 0,
                 dim = c(dim(mat_sim_pos), 2))
mat_sim[,,1] <- mat_sim_pos
mat_sim[,,2] <- mat_sim_neg

mat_sim <- rowMeans(mat_sim, dims = 2, na.rm = TRUE)

colnames(mat_sim) <- colnames(mat_sim_pos)
rownames(mat_sim) <- rownames(mat_sim_pos)
```

```{r fig.width = 12, fig.height = 10}
p_similarity <- plot_heatmap(x = mat_sim, 
                             clustering = FALSE) +
  labs(title = "Symmetric cluster similarity")

pdf(file = "cluster_similarity.pdf",
    width = 12,
    height = 10)
print(p_similarity)
dev.off()

p_similarity
```

# Similarity analysis for 5 clusters

## 5-cluster similarity matrix

```{r}
nk <- 5
```

We can start by setting the number of clusters to a specific value. I've chosen nk = `r nk`. The reduced similarity matrix is as follows:

```{r fig.width = 8, fig.height = 6}
col_selection <- str_detect(colnames(mat_sim), str_c("^", nk, "-"))
row_selection <- str_detect(rownames(mat_sim), str_c("^", nk, "-"))

mat_sim_nk <- mat_sim[row_selection, col_selection]  

p_heatmap_nk <- plot_heatmap(x = mat_sim_nk,
                             clustering = FALSE,
                             annotations = "k")

p_heatmap_nk

outfile <- str_c("ClusterSimilarityMatrix_nk_", nk, ".pdf")
pdf(file = outfile,
    width = 6,
    height = 5)
p_heatmap_nk
dev.off()
```

## Similarity analysis for mouse 5-2 and human 5-1

### Slice series

```{r}
k_mouse <- 2
k_human <- 1
```

```{r fig.width = 10, fig.height = 8}
mouse_map <- plot_cluster_map(species = "mouse",
                              nk = nk, k = k_mouse,
                              nrow = 5, ncol = 5,
                              jacobians = jacobians,
                              mask = "symmetric",
                              threshold_method = threshold_method,
                              threshold = threshold,
                              draw_plot = FALSE)

mouse_map_grob <- grobify(mouse_map)

outfile <- str_c("MouseClusterMap_nk_", nk, "_k_", k_mouse, ".pdf")
pdf(file = outfile,
    width = 10,
    height = 6)
draw(mouse_map)
dev.off()
```

```{r fig.width = 10, fig.height = 8}
human_map <- plot_cluster_map(species = "human",
                              nk = nk, k = k_human,
                              nrow = 5, ncol = 5,
                              jacobians = jacobians,
                              mask = "symmetric",
                              threshold_method = threshold_method,
                              threshold = threshold,
                              draw_plot = FALSE)
human_map_grob <- grobify(human_map)

outfile <- str_c("HumanClusterMap_nk_", nk, "_k_", k_human, ".pdf")
pdf(file = outfile,
    width = 6,
    height = 6)
draw(human_map)
dev.off()
```

### Spider plots

```{r fig.width = 10, fig.height = 10}
nk_list <- list(mouse = nk, human = nk)
k_list <- list(mouse = k_mouse, human = k_human)

spider_coarse <- plot_spider_chart(nk = nk_list, k = k_list,
                                   spokes = "neuro-coarse", 
                                   jacobians = jacobians, 
                                   threshold_method = threshold_method, 
                                   threshold = threshold,
                                   plot_type = "spider",
                                   save = FALSE, 
                                   fig_width = 10, fig_height = 10)

spider_coarse_grob <- ggplotGrob(spider_coarse) %>% grid.force()

outfile <- str_c("SpiderPlotCoarse_nk_", nk, "_kmouse_", k_mouse, "_khuman_", k_human, ".pdf")
pdf(file = outfile,
    width = 8,
    height = 8)
print(spider_coarse)
dev.off()
```

```{r fig.width = 10, fig.height = 10}
spider_mid <- plot_spider_chart(nk = nk_list, k = k_list,
                                spokes = "neuro-mid", 
                                jacobians = jacobians, 
                                threshold_method = threshold_method, 
                                threshold = threshold,
                                step = 0.1,
                                plot_type = "spider",
                                save = FALSE, 
                                fig_width = 10, fig_height = 10)

spider_mid_grob <- ggplotGrob(spider_mid) %>% grid.force()

outfile <- str_c("SpiderPlotMid_nk_", nk, "_kmouse_", k_mouse, "_khuman_", k_human, ".pdf")
pdf(file = outfile,
    width = 8,
    height = 8)
print(spider_mid)
dev.off()
```

### Anatomical histograms

```{r}
df_sim_hist <- read_csv("../anatomical_similarity_histogram.csv", show_col_types = FALSE)

cluster_sim <- mat_sim_nk[k_human, k_mouse]

p_density <- ggplot(df_sim_hist, aes(x = Similarity, 
                                     y = ..density..,
                                     fill = Type,
                                     col = Type)) + 
  geom_density(alpha = 0.1,
               bw = 0.05) + 
  geom_vline(xintercept = cluster_sim,
             linetype = "dashed") + 
  scale_x_continuous(breaks = seq(-1, 1, by = 0.1),
                     expand = expansion(mult = 0)) + 
  labs(x = "Correlation",
       y = "Density",
       col = NULL,
       fill = NULL,
       title = "Distributions of mouse-human anatomical latent space correlations") + 
  theme_bw() + 
  theme(legend.position = "bottom")
```

```{r fig.width = 10, fig.height = 5}
outfile <- str_c("AnatomicalDistributions_nk_", nk, "_kmouse_", k_mouse, "_khuman_", k_human, ".pdf")
pdf(file = outfile,
    width = 10,
    height = 5)
print(p_density)
dev.off()

p_density
```

```{r}
anatomical_hist_grob <- ggplotGrob(p_density) %>% grid.force()
```

```{r}
fig_layout <- rbind(c(1, 2),
                    c(3, 4),
                    c(5, 6),
                    c(7, 7))
fig_widths <- unit(c(5, 5), 'inch')
fig_heights <- unit(c(0.5, 5, 5, 5), 'inch')

tmp <- arrangeGrob(textGrob(str_c("Mouse cluster ", nk, "-", k_mouse)),
                   textGrob(str_c("Human cluster ", nk, "-", k_human)),
                   mouse_map_grob,
                   human_map_grob,
                   spider_coarse_grob,
                   spider_mid_grob,
                   anatomical_hist_grob,
                   layout_matrix = fig_layout,
                   widths = fig_widths,
                   heights = fig_heights)

fig_width <- 10
fig_height <- 15.5

outfile <- str_c("ClusterSimilarity_mouse_", nk, "-", k_mouse, "_human_", nk, "-", k_human, ".pdf")
pdf(file = outfile,
    width = fig_width,
    height = fig_height)
grid.draw(tmp)
dev.off()
```
