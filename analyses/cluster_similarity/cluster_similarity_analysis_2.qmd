---
title: "Similarity analysis of mouse and human autism neuroanatomical clusters"
format: 
  html:
    embed-resources: true
    self-contained: true
editor: visual
---

```{r setup, echo = FALSE}
knitr::opts_chunk$set(echo = FALSE,
                      eval = TRUE)
```

```{r packages}
suppressPackageStartupMessages(library(tidyverse))
suppressPackageStartupMessages(library(data.tree))
suppressPackageStartupMessages(library(RMINC))
suppressPackageStartupMessages(library(MRIcrotome))
suppressPackageStartupMessages(library(pheatmap))
suppressPackageStartupMessages(library(viridis))
suppressPackageStartupMessages(library(ggplotify))
```

```{r functions}
source("../../functions/buildSimilarityMatrix.R")
source("../../functions/tree_tools.R")
source("analysis_tools.R")
```

```{r parameters-general}
#Gene space
gene_space <- "average_latent_space"
# gene_space <- "input_space"
# gene_space<- "latent_space"

#Latent space ID
#Only used if gene_space == "latent_space"
latent_space_id <- 1

#Jacobians
# jacobians <- "absolute"
jacobians <- "relative"
if (jacobians == "absolute") {
  jacobians_short <- "abs"
} else if (jacobians == "relative") {
  jacobians_short <- "rel"
} else {
  stop()
}

#Thresholding method
# threshold_method <- "intensity"
threshold_method <- "topn"

#Threshold value
threshold <- 0.2

#Mask type
mask_type <- "positive"
# mask_type <- "negative"

#Metric
metric <- "correlation"
```

The parameters chosen for this analysis are:

```{r parameters-table}
df_parameters <- tibble(Parameter = c("Gene space",
                                      "Jacobians",
                                      "Thresholding method",
                                      "Threshold",
                                      "Mask type",
                                      "Similarity metric"),
                        Value = c(gene_space,
                                  jacobians,
                                  threshold_method,
                                  threshold,
                                  mask_type,
                                  metric))

knitr::kable(df_parameters)
```

We start by examining the cluster similarity using the masks with sign: `r mask_type`.


```{r output-directory}
plot_dir_base <- "plots/signed_mask_analysis/"
plot_dir <- str_c(gene_space,
                  "jacobians", jacobians,
                  "threshold", threshold_method,
                  threshold,
                  sep = "_")
plot_dir <- str_c(plot_dir_base, plot_dir)
if(!dir.exists(plot_dir)) {
  dir.create(plot_dir, recursive = TRUE, showWarnings = FALSE)
}
```

```{r import-sim-matrix}
mat_sim <- import_similarity_matrix(gene_space = gene_space,
                                    jacobians = jacobians_short,
                                    threshold_method = threshold_method,
                                    threshold = threshold,
                                    mask_type = mask_type,
                                    latent_space_id = latent_space_id)
```

```{r plot-heatmap, fig.width = 12, fig.height = 12}
plot_heatmap(x = mat_sim, 
             clustering = FALSE, 
             gene_space = gene_space,
             jacobians = jacobians,
             mask_type = mask_type,
             threshold_method = threshold_method,
             threshold = threshold,
             metric = metric,
             save = TRUE, outdir = plot_dir,
             fig_width = 10, fig_height = 10)
```

First we want to identify a coarse match between clusters based on the chosen mask type. 

```{r parameters-clustering}
human_kcut <- 3
mouse_kcut <- 3
message(str_c("Number of mouse meta-clusters set to: ", mouse_kcut))
message(str_c("Number of human meta-clusters set to: ", human_kcut))
```

```{r plot-heatmap-clustered, fig.width = 12, fig.height = 12}
plot_heatmap(x = mat_sim, 
             clustering = TRUE, 
             cutree_rows = human_kcut,
             cutree_cols = mouse_kcut,
             gene_space = gene_space,
             jacobians = jacobians,
             mask_type = mask_type,
             threshold_method = threshold_method,
             threshold = threshold,
             metric = metric,
             # save = FALSE,
             save = TRUE,
             outdir = plot_dir,
             fig_width = 10, fig_height = 10)
```

We can pick mouse and human meta-clusters that seem broadly similar.

```{r parameters-meta-k}
mouse_meta_k <- 2
human_meta_k <- 2

# mouse_meta_k <- 3
# human_meta_k <- 3

message(str_c("Examining mouse meta-cluster: ", mouse_meta_k))
message(str_c("Examining human meta-cluster: ", human_meta_k))
```

The representative mean effect size maps for the clusters within these meta-clusters are as follows: 


```{r plot-cluster-maps-mouse, fig.width = 20, fig.height = 5}
plot_cluster_maps(x = mat_sim,
                  species = "mouse",
                  kcut = mouse_kcut,
                  meta_k = mouse_meta_k,
                  gene_space = gene_space,
                  jacobians = jacobians,
                  mask_type = mask_type,
                  threshold_method = threshold_method,
                  threshold = threshold,
                  save = TRUE,
                  outdir = plot_dir,
                  fig_width = 20, fig_height = 5)
```

```{r plot-cluster-maps-human, fig.width = 12, fig.height = 10}
plot_cluster_maps(x = mat_sim,
                  species = "human",
                  kcut = human_kcut,
                  meta_k = human_meta_k,
                  gene_space = gene_space,
                  jacobians = jacobians,
                  mask_type = mask_type,
                  threshold_method = threshold_method,
                  threshold = threshold,
                  save = TRUE,
                  outdir = plot_dir,
                  fig_width = 10, fig_height = 6)
```


```{r}
if (mask_type == "positive") {
  mask_opposite <- "negative"
} else if (mask_type == "negative") {
  mask_opposite <- "positive"
}
```


Next we want to determine whether the clusters within these meta-clusters have coherent patterns based on masks of the opposite sign. In this case, that mask is: 

To do so, we extract the mouse and human clusters in the chosen meta-clusters, and examine their similarity based on the mask. 


```{r}
df_mouse_meta_cluster <- generate_meta_clusters(x = mat_sim, 
                                                kcut = mouse_kcut,
                                                axis = "columns") %>% 
  filter(meta_k == mouse_meta_k)

df_human_meta_cluster <- generate_meta_clusters(x = mat_sim, 
                                                kcut = human_kcut,
                                                axis = "rows") %>% 
  filter(meta_k == human_meta_k)

mat_sim_opposite <- import_similarity_matrix(gene_space = gene_space,
                                             jacobians = jacobians_short,
                                             threshold_method = threshold_method,
                                             threshold = threshold,
                                             mask_type = mask_opposite,
                                             latent_space_id = latent_space_id)

mouse_clusters <- df_mouse_meta_cluster[["cluster_id"]]
human_clusters <- df_human_meta_cluster[["cluster_id"]]

ind_cols <- colnames(mat_sim_opposite) %in% mouse_clusters
ind_rows <- rownames(mat_sim_opposite) %in% human_clusters

mat_sim_reduced <- mat_sim_opposite[ind_rows, ind_cols]
```

```{r fig.width = 10, fig.height = 10}
mouse_kcut_antisign <- 5
human_kcut_antisign <- 2

plot_heatmap(x = mat_sim_reduced, 
             clustering = TRUE,
             cutree_rows = human_kcut_antisign,
             cutree_cols = mouse_kcut_antisign,
             gene_space = gene_space,
             jacobians = jacobians,
             mask_type = mask_opposite,
             threshold_method = threshold_method,
             threshold = threshold,
             metric = metric)
```

```{r}
mouse_meta_k_antisign <- 1
human_meta_k_antisign <- 2
# 
# mouse_meta_k_antisign <- 1
# human_meta_k_antisign <- 1

message(str_c("Examining mouse meta-cluster: ", mouse_meta_k_antisign))
message(str_c("Examining human meta-cluster: ", human_meta_k_antisign))
```

The representative mean effect size maps for these clusters are as follows. Note that we examine both positive and negative effect size values now. 

```{r fig.width = 10, fig.height = 5}
plot_cluster_maps(x = mat_sim_reduced,
                  species = "mouse",
                  kcut = mouse_kcut_antisign,
                  meta_k = mouse_meta_k_antisign,
                  gene_space = gene_space,
                  jacobians = jacobians,
                  mask_type = "symmetric",
                  threshold_method = threshold_method,
                  threshold = threshold)
```

```{r fig.width = 6, fig.height = 8}
plot_cluster_maps(x = mat_sim_reduced,
                  species = "human",
                  kcut = human_kcut_antisign,
                  meta_k = human_meta_k_antisign,
                  gene_space = gene_space,
                  jacobians = jacobians,
                  mask_type = "symmetric",
                  threshold_method = threshold_method,
                  threshold = threshold)
```

Next we can examine the weight of different neuroanatomical regions in and cluster masks. 

```{r}
p_spider_sign <- plot_spider(x = mat_sim_reduced,
                             mouse_kcut = mouse_kcut_antisign,
                             mouse_meta_k = mouse_meta_k_antisign,
                             human_kcut = human_kcut_antisign,
                             human_meta_k = human_meta_k_antisign,
                             spokes = "neuro-coarse",
                             mask_type = mask_type,
                             gene_space = gene_space,
                             jacobians = jacobians,
                             threshold_method = threshold_method,
                             threshold = threshold)

p_spider_antisign <- plot_spider(x = mat_sim_reduced,
                                 mouse_kcut = mouse_kcut_antisign,
                                 mouse_meta_k = mouse_meta_k_antisign,
                                 human_kcut = human_kcut_antisign,
                                 human_meta_k = human_meta_k_antisign,
                                 spokes = "neuro-coarse",
                                 mask_type = mask_opposite,
                                 gene_space = gene_space,
                                 jacobians = jacobians,
                                 threshold_method = threshold_method,
                                 threshold = threshold)

p_spider_sign <- p_spider_sign +
  labs(title = str_c("Mask sign: ", mask_type),
       subtitle = NULL)

p_spider_antisign <- p_spider_antisign +
  labs(title = str_c("Mask sign: ", mask_opposite),
       subtitle = NULL)

```
```{r fig.width = 10, fig.height = 10}
library(patchwork)
(p_spider_sign | p_spider_antisign) +
  plot_layout(guides = "collect") +
  plot_annotation(title = "Neuroanatomical weighting of clusters") &
  theme(legend.position = "bottom")
```

```{r eval=FALSE, include = FALSE}
p_spider_sign <- plot_spider(x = mat_sim_reduced,
                             mouse_kcut = mouse_kcut_antisign,
                             mouse_meta_k = mouse_meta_k_antisign,
                             human_kcut = human_kcut_antisign,
                             human_meta_k = human_meta_k_antisign,
                             spokes = "neuro-mid",
                             mask_type = mask_type,
                             gene_space = gene_space,
                             jacobians = jacobians,
                             threshold_method = threshold_method,
                             threshold = threshold)

p_spider_antisign <- plot_spider(x = mat_sim_reduced,
                                 mouse_kcut = mouse_kcut_antisign,
                                 mouse_meta_k = mouse_meta_k_antisign,
                                 human_kcut = human_kcut_antisign,
                                 human_meta_k = human_meta_k_antisign,
                                 spokes = "neuro-mid",
                                 mask_type = mask_opposite,
                                 gene_space = gene_space,
                                 jacobians = jacobians,
                                 threshold_method = threshold_method,
                                 threshold = threshold)

p_spider_sign <- p_spider_sign +
  labs(title = str_c("Mask sign: ", mask_type),
       subtitle = NULL)

p_spider_antisign <- p_spider_antisign +
  labs(title = str_c("Mask sign: ", mask_opposite),
       subtitle = NULL)
```

```{r fig.width = 20, fig.height = 20, eval=FALSE, include=FALSE}
library(patchwork)
(p_spider_sign | p_spider_antisign) +
  plot_layout(guides = "collect") +
  plot_annotation(title = "Neuroanatomical weighting of clusters") &
  theme(legend.position = "bottom")
```
